# -*- coding: utf-8 -*-
"""Rocket Delivery For Satellite Calculator

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AXe5FliKVAsuhnFbWAwHM7LBBHp78NCt
"""

from datetime import datetime, timedelta

def format_date(timestamp):
    datetime_obj = datetime.fromtimestamp(timestamp)
    return(datetime_obj)

def calculate_landing_time(rocket_launch_dt, travel_duration, datetime_format):
    travel_duration_obj = timedelta(days=travel_duration)
    landing_date_dt = rocket_launch_dt + travel_duration_obj
    landing_date_str = landing_date_dt.strftime(datetime_format)
    return(landing_date_str)

def days_until_delivery(expected_delivery_dt, current_dt):
    delivery_dur = expected_delivery_dt - current_dt
    days_until = delivery_dur.days
    return(days_until)

# Subtracting two datetime objects in Python automatically makes timedelta object
# timestamp is UNIX numeric but datetime is readable format that operations can be performed on
# timedelta is for holding a duration/range of time that can be added or subtracted from a datetime object

# formatting rocket launch timestamp input
timestamp = int(input('What is the rocket launch timestamp?'))
rocket_launch_dt = format_date(timestamp)
travel_duration = int(input('What is the travel duration in # of days?'))
datetime_format = "%d-%m-%Y"

# landing date calculation
print('Landing Date: ' + str(calculate_landing_time(rocket_launch_dt, travel_duration, datetime_format)))

# formatting expected satellite delivery timestamp
timestamp = int(input('What is the timestamp?'))
expected_delivery_dt = format_date(timestamp)
current_dt = datetime.now()

# days until interstellar satellite delivery
print('Days Until Delivery: ' + str(days_until_delivery(expected_delivery_dt, current_dt)))